import streamlit as st
import google.generativeai as genai

# --- C·∫•u h√¨nh API key ---
genai.configure(api_key="AIzaSyDjldtlqP2r6MzCc0HJkUvkdJeP2G0H-BA")

# --- Khai b√°o model ---
model_name = "models/gemini-2.0-flash"  # ho·∫∑c "gemini-2.0-flash"
model = genai.GenerativeModel(model_name)

# --- ƒê·ªçc d·ªØ li·ªáu t·ª´ file ---
with open("data.txt", "r", encoding="utf-8") as f:
    data = f.read()

# --- Giao di·ªán Streamlit ---
st.set_page_config(page_title="Chatbot Gemini", page_icon="ü§ñ")
st.title("ü§ñ Chatbot Gemini (Streamlit)")
st.caption("D·ªØ li·ªáu ƒë∆∞·ª£c n·∫°p t·ª´ file `data.txt`")

# --- L∆∞u l·ªãch s·ª≠ chat ---
if "messages" not in st.session_state:
    st.session_state.messages = []

# --- Hi·ªÉn th·ªã l·ªãch s·ª≠ chat ---
for msg in st.session_state.messages:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# --- √î nh·∫≠p tin nh·∫Øn ---
if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."):
    # L∆∞u tin nh·∫Øn ng∆∞·ªùi d√πng
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # --- T·∫°o prompt cho model ---
    full_prompt = f"""
D∆∞·ªõi ƒë√¢y l√† d·ªØ li·ªáu tham kh·∫£o:

{data}

H√£y tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng d·ª±a tr√™n d·ªØ li·ªáu tr√™n.
N·∫øu kh√¥ng c√≥ th√¥ng tin trong d·ªØ li·ªáu, h√£y n√≥i 'Kh√¥ng t√¨m th·∫•y th√¥ng tin trong d·ªØ li·ªáu.' 
C√¢u h·ªèi: {prompt}
"""

    # --- G·ªçi Gemini ---
    response = model.generate_content(full_prompt)
    reply = response.text

    # Hi·ªÉn th·ªã ph·∫£n h·ªìi
    with st.chat_message("assistant"):
        st.markdown(reply)

    # L∆∞u ph·∫£n h·ªìi v√†o session
    st.session_state.messages.append({"role": "assistant", "content": reply})

# --- N√∫t reset chat ---
if st.button("üîÅ X√≥a l·ªãch s·ª≠ chat"):
    st.session_state.messages = []
    st.experimental_rerun()
